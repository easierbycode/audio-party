{"version":3,"sources":["assets/js/index.ts"],"names":[],"mappings":";AAAA,IAAM,EAAY,SAAS,eAAe,aACpC,EAA4B,SAAS,eAAe,WAC1D,EAAO,MAAQ,OAAO,WACtB,EAAO,OAAS,OAAO,YACvB,IACI,EACA,EAFE,EAAM,EAAO,WAAW,MAI9B,EAAU,iBAAiB,QAAS,WAC1B,IAAA,EAA2B,SAAS,eAAe,UACnD,EAAe,IAAI,aACzB,EAAO,OAKP,EAA2C,IAAI,4BAA4B,EAAc,CACrF,aAAc,IAGlB,EAAyB,EAAa,iBACtC,EAAY,QAAQ,GACpB,EAAS,QAAQ,EAAa,aAC9B,EAAS,QAAU,GACb,IAIF,EACA,EALE,EAAe,EAAS,kBACxB,EAAY,IAAI,WAAW,GAE3B,EAAW,EAAO,MAAQ,GAIvB,SAAA,IACL,EAAI,EACJ,EAAI,UAAU,EAAG,EAAG,EAAO,MAAO,EAAO,QACzC,EAAS,qBAAqB,GACzB,IAAA,IAAI,EAAI,EAAG,EAAI,EAAc,IAC9B,EAAY,EAAU,GACtB,EAAI,UAAY,QAChB,EAAI,SAAS,EAAG,EAAO,OAAS,EAAW,EAAU,GACrD,GAAK,EAET,sBAAsB,GAG1B","file":"js.07547fcd.js","sourceRoot":"../src","sourcesContent":["const container = document.getElementById('container');\nconst canvas = <HTMLCanvasElement>document.getElementById('canvas1');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nconst ctx = canvas.getContext('2d');\nlet audioSource;\nlet analyser;\n\ncontainer.addEventListener('click', () => {\n    const audio1 = <HTMLMediaElement>document.getElementById('audio1');\n    const audioContext = new AudioContext();\n    audio1.play();\n\n    // if audio1.src = 'BASE64...'\n    // audioSource = <MediaElementAudioSourceNode>audioContext.createMediaElementSource(audio1);\n    // if <audio> has src='', use approach below\n    audioSource = <MediaElementAudioSourceNode>new MediaElementAudioSourceNode(audioContext, {\n        mediaElement: audio1\n    });\n    \n    analyser = <AnalyserNode>audioContext.createAnalyser();\n    audioSource.connect(analyser);\n    analyser.connect(audioContext.destination);\n    analyser.fftSize = 64;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const barWidth = canvas.width / bufferLength;\n    let barHeight;\n    let x;\n\n    function animate() {\n        x = 0;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        analyser.getByteFrequencyData(dataArray);\n        for (let i = 0; i < bufferLength; i++) {\n            barHeight = dataArray[i];\n            ctx.fillStyle = 'white';\n            ctx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n            x += barWidth;\n        }\n        requestAnimationFrame(animate);\n    }\n\n    animate();\n});"]}